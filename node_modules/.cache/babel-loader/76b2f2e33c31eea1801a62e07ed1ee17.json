{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\Repository\\\\React\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault(); // const newContact = {\n      //   id: nanoid(),\n      //   name: this.state.name,\n      //   number: this.state.number,\n      // };\n\n      this.props.addContact(this.state);\n      this.setState({\n        name: '',\n        number: ''\n      }); // this.reset();\n    };\n\n    this.handelChange = evt => {\n      // evt.name.value\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handelChange,\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handelChange,\n          type: \"tel\",\n          name: \"number\",\n          placeholder: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          value: this.state.number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/GoIT/Repository/React/goit-react-hw-03-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Component","ContactForm","state","name","number","handleSubmit","evt","preventDefault","props","addContact","setState","handelChange","target","value","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDE,KADiD,GACzC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADyC;;AAAA,SAMjDC,YANiD,GAMlCC,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACC,cAAJ,GADoB,CAEpB;AACA;AACA;AACA;AACA;;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKP,KAA3B;AACA,WAAKQ,QAAL,CAAc;AACZP,QAAAA,IAAI,EAAE,EADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd,EARoB,CAYpB;AACD,KAnBgD;;AAAA,SAqBjDO,YArBiD,GAqBlCL,GAAG,IAAI;AACpB;AACA,WAAKI,QAAL,CAAc;AAAE,SAACJ,GAAG,CAACM,MAAJ,CAAWT,IAAZ,GAAmBG,GAAG,CAACM,MAAJ,CAAWC;AAAhC,OAAd;AACD,KAxBgD;AAAA;;AA0BjDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAA,8BACE;AAAA,wCAEE;AACE,UAAA,QAAQ,EAAE,KAAKM,YADjB;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,MAJd;AAKE,UAAA,OAAO,EAAC,wHALV;AAME,UAAA,KAAK,EAAC,wIANR;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC;AARpB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAA,0CAEE;AACE,UAAA,QAAQ,EAAE,KAAKQ,YADjB;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,WAAW,EAAC,QAJd;AAKE,UAAA,OAAO,EAAC,wFALV;AAME,UAAA,KAAK,EAAC,8FANR;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE;AARpB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA4BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AA3DgD","sourcesContent":["import { Component } from 'react';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    // const newContact = {\r\n    //   id: nanoid(),\r\n    //   name: this.state.name,\r\n    //   number: this.state.number,\r\n    // };\r\n    this.props.addContact(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n    // this.reset();\r\n  };\r\n\r\n  handelChange = evt => {\r\n    // evt.name.value\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={this.handelChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            onChange={this.handelChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
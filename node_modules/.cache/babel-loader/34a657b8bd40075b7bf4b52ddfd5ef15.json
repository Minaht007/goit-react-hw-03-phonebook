{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\Repository\\\\React\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport { nanoid } from 'nanoid';\nimport { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContact = newContact => {\n      const isInContacts = this.state.contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase());\n\n      if (isInContacts) {\n        alert('This contact IS');\n        return;\n      }\n\n      const normalizedContact = { ...newContact,\n        id: nanoid()\n      };\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, normalizedContact]\n        };\n      });\n    };\n\n    this.delContact = id => {\n      this.setState(prevState => {\n        const deletedItem = prevState.contacts.filter(contact => contact.id === id);\n        const itemsArr = JSON.parse(localStorage.getItem('deletedContacts')) || [];\n        itemsArr.push(deletedItem);\n        localStorage.setItem('deletedContacts', JSON.stringify(itemsArr));\n        return {\n          contacts: prevState.contacts.filter(contact => contact.id !== id)\n        };\n      });\n    };\n\n    this.handelChange = evt => {\n      // evt.name.value\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: ''\n      });\n    };\n\n    this.getFilteredContacts = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    };\n  }\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Phonbook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          addContact: this.addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          filterChange: this.handelChange,\n          filter: this.state.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: filteredContacts,\n          delContact: this.delContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/GoIT/Repository/React/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["nanoid","Component","ContactForm","ContactList","Filter","App","state","contacts","id","name","number","filter","addContact","newContact","isInContacts","some","contact","toLowerCase","alert","normalizedContact","setState","prevState","delContact","deletedItem","itemsArr","JSON","parse","localStorage","getItem","push","setItem","stringify","handelChange","evt","target","value","reset","getFilteredContacts","includes","render","filteredContacts"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\r\nimport { Component } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n  addContact = newContact => {\r\n    const isInContacts = this.state.contacts.some(\r\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n    );\r\n    if (isInContacts) {\r\n      alert('This contact IS');\r\n      return;\r\n    }\r\n    const normalizedContact = {\r\n      ...newContact,\r\n      id: nanoid(),\r\n    };\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, normalizedContact],\r\n      };\r\n    });\r\n  };\r\n\r\n  delContact = id => {\r\n    this.setState(prevState => {\r\n      const deletedItem = prevState.contacts.filter(\r\n        contact => contact.id === id\r\n      );\r\n      const itemsArr =\r\n        JSON.parse(localStorage.getItem('deletedContacts')) || [];\r\n      itemsArr.push(deletedItem);\r\n      localStorage.setItem('deletedContacts', JSON.stringify(itemsArr));\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n  handelChange = evt => {\r\n    // evt.name.value\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '' });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n    return (\r\n      <>\r\n        <section>\r\n          <h1>Phonbook</h1>\r\n          <ContactForm addContact={this.addContact} />\r\n        </section>\r\n\r\n        <section>\r\n          <h2>Contacts</h2>\r\n          <Filter filterChange={this.handelChange} filter={this.state.filter} />\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            delContact={this.delContact}\r\n          />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}